# -*- coding: utf-8 -*-
"""Eksplorativna_analiza_očekivanog_životnog_veka_stanovništva_Vasilije_Zekovic_in_4_2020.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1alsCdl2MpiFlFKIvVBPuSIdjvSBqOmB9

# Eksplorativna analiza očekivanog životnog veka stanovništva

---

Skup podataka o očekivanoj dužini životnog veka stanovništva većine država u periodu od 2000. do 2015. godine:

Metapodaci:
* Naziv: “Life Expectancy (WHO)”.
* Autori: Kumar Rajarshi,Deeksha Russell i Duan Wang
* Link: https://www.kaggle.com/datasets/kumarajarshi/life-expectancy-who

Više o podacima:
*	Podaci su originalno prikupljeni od strane Svetske zdravstvene organizacije (engl. WHO) odnosno Ujedinjenih nacija (engl. UN), stoga su vrlo reprezentativni, dok su gorepomenuti autori u određenoj meri pripremili podatke za dalje analize.
*	Autori su se potrudili da obuhvate pored osnovnih faktora koji se najčešće koriste u studijama ovog tipa i faktore koji obično nisu uključeni.
*	Reč je o bogatoj kolekciji podataka koja se sastoji od 22 kolone razovrsnih kategorija i 2939 pojava, prikupljenih tokom 15 godina. Nedostatak ovog skupa podataka leži u prilično velikom broju nedostajućih vrednosti. Preliminarna analiza govori da je čak 1289 pojava posredno obuhvaćeno ovim problemom.  
*	Svih 20 prediktivnih varijabli koje će se koristiti u istraživanju su grupisane u četiri ključne oblasti: imunizacija, smrtnost, ekonomija i društvena sfera.

---

## Upoznavanje sa podacima

#### Prikaz dela podataka:
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import geopandas as gpd
# from google.colab import files
from matplotlib.patches import Patch

# uploaded = files.upload()

data = pd.read_csv('Life Expectancy Data.csv')

pd.set_option('display.max_columns', None)

sns.set_style("darkgrid")

print()

print(data.head())

"""#### Preimenovanje kolona"""

data = data.rename(
    columns = {
            'Country' : 'Drzava',
            'Year' : 'Godina',
            'Status' : 'Status drzave',
            'Life expectancy ' : 'Ocekivani zivotni vek',
            'Adult Mortality' : 'Smrtnost odraslih (15-60)',
            'infant deaths' : 'Smrtnost novorodjencadi',
            'Alcohol' : 'Konzumacija alkohola godišnje (l)(15+)',
            'percentage expenditure' : 'Zdravstveni izdaci po osobi u USD',
            'Measles ' : 'Prijavljeni slucajevi malih boginja',
            'under-five deaths ' : 'Smrtnost mladjih od 5 god u hiljadama',
            'Polio' : 'Poliomijelitis imunizacija jednogodisnjaka',
            'Total expenditure' : '% budzeta za zdravstvene izdatke',
            'Diphtheria ' : 'Difterija',
            'GDP' : 'BDP po glavi stanovnika',
            'Population' : 'Populacija',
            ' thinness  1-19 years' : 'Mrsavost od 10 do 19 god',
            ' thinness 5-9 years': 'Mrsavost od 5 do 9 god',
            'Income composition of resources' : 'Uspesnost u iskoristenosti prirodnih resursa',
            'Schooling' : 'Skolovanje',
            ' HIV/AIDS' : 'Broj dece [1-4] umrle od HIV-a',
            ' BMI ' : "Procenat gojazog stanovništva"
        }
    )

data['Drzava'] = data['Drzava'].replace('Russian Federation', 'Russia')

"""####Prikaz broja redova i kolona u podacima:"""

print("Broj redova i kolona u podacima:",data.shape)

"""#### Pregled jedinstvenih vrednosti obeležja"""

print("\nBroj jedinstvenih vrednosti za obelezja:\n")

print(f'Drzava: {data.Drzava.nunique()}')
print(f'Godina: {data.Godina.nunique()}')
print(f'Status drzave: {data["Status drzave"].nunique()}')
print(f'Ocekivani zivotni vek: {data["Ocekivani zivotni vek"].nunique()}')
print(f'Smrtnost odraslih (15-60): {data["Smrtnost odraslih (15-60)"].nunique()}')
print(f'Smrtnost novorodjencadi: {data["Smrtnost novorodjencadi"].nunique()}')
print(f'Konzumacija alkohola godišnje (l)(15+): {data["Konzumacija alkohola godišnje (l)(15+)"].nunique()}')
print(f'Zdravstveni izdaci po osobi u USD: {data["Zdravstveni izdaci po osobi u USD"].nunique()}')
print(f'Prijavljeni slucajevi malih boginja: {data["Prijavljeni slucajevi malih boginja"].nunique()}')
print(f'Smrtnost mladjih od 5 god u hiljadama: {data["Smrtnost mladjih od 5 god u hiljadama"].nunique()}')
print(f'Poliomijelitis imunizacija jednogodisnjaka: {data["Poliomijelitis imunizacija jednogodisnjaka"].nunique()}')
print(f'% budzeta za zdravstvene izdatke: {data["% budzeta za zdravstvene izdatke"].nunique()}')
print(f'Difterija: {data["Difterija"].nunique()}')
print(f'BDP po glavi stanovnika: {data["BDP po glavi stanovnika"].nunique()}')
print(f'Populacija: {data["Populacija"].nunique()}')
print(f'Mrsavost od 10 do 19 god: {data["Mrsavost od 10 do 19 god"].nunique()}')
print(f'Mrsavost od 5 do 9 god: {data["Mrsavost od 5 do 9 god"].nunique()}')
print(f'Uspesnost u iskoristenosti prirodnih resursa: {data["Uspesnost u iskoristenosti prirodnih resursa"].nunique()}')
print(f'Skolovanje: {data["Skolovanje"].nunique()}')
print(f'Populacija: {data["Populacija"].nunique()}')
print(f'Broj dece [1-4] umrle od HIV-a: {data["Broj dece [1-4] umrle od HIV-a"].nunique()}')
print(f'Procenat gojazog stanovništva: {data["Procenat gojazog stanovništva"].nunique()}')

"""#### Pregled tipova podataka"""

print("\nTipovi podataka obeležja:\n")

print(f'Drzava: {data.Drzava.dtype}')
print(f'Godina: {data.Godina.dtype}')
print(f'Status drzave: {data["Status drzave"].dtype}')
print(f'Ocekivani zivotni vek: {data["Ocekivani zivotni vek"].dtype}')
print(f'Smrtnost odraslih (15-60): {data["Smrtnost odraslih (15-60)"].dtype}')
print(f'Smrtnost novorodjencadi: {data["Smrtnost novorodjencadi"].dtype}')
print(f'Konzumacija alkohola godišnje (l)(15+): {data["Konzumacija alkohola godišnje (l)(15+)"].dtype}')
print(f'Zdravstveni izdaci po osobi u USD: {data["Zdravstveni izdaci po osobi u USD"].dtype}')
print(f'Prijavljeni slucajevi malih boginja: {data["Prijavljeni slucajevi malih boginja"].dtype}')
print(f'Smrtnost mladjih od 5 god u hiljadama: {data["Smrtnost mladjih od 5 god u hiljadama"].dtype}')
print(f'Poliomijelitis imunizacija jednogodisnjaka: {data["Poliomijelitis imunizacija jednogodisnjaka"].dtype}')
print(f'% budzeta za zdravstvene izdatke: {data["% budzeta za zdravstvene izdatke"].dtype}')
print(f'Difterija: {data["Difterija"].dtype}')
print(f'BDP po glavi stanovnika: {data["BDP po glavi stanovnika"].dtype}')
print(f'Populacija: {data["Populacija"].dtype}')
print(f'Mrsavost od 10 do 19 god: {data["Mrsavost od 10 do 19 god"].dtype}')
print(f'Mrsavost od 5 do 9 god: {data["Mrsavost od 5 do 9 god"].dtype}')
print(f'Uspesnost u iskoristenosti prirodnih resursa: {data["Uspesnost u iskoristenosti prirodnih resursa"].dtype}')
print(f'Skolovanje: {data["Skolovanje"].dtype}')
print(f'Populacija: {data["Populacija"].dtype}')
print(f'Broj dece [1-4] umrle od HIV-a: {data["Broj dece [1-4] umrle od HIV-a"].dtype}')
print(f'Procenat gojazog stanovništva: {data["Procenat gojazog stanovništva"].dtype}')

"""#### Prikaz nedostajućih vrednosti"""

print(data.isna().sum())

"""#### Broj redova u kojima se pojavljuju nedostajuće vrednosti"""

num_rows_without_na = data.dropna()
num_na_rows = data.shape[0] - num_rows_without_na.shape[0]
print('Broj redova u kojima se pojavljuju nedostajuće vrednosti: ', num_na_rows)
print("Obuhvaćeno je", round(num_na_rows/data.shape[0] * 100, 2), "% ukupnog broja pojava")

"""#### Prikaz deskriptivne statistike"""

print(data.describe())

"""#### Broj država koje nemaju uzorke za svih 15 godina"""

# Prebrojavanje uzoraka (godina) po državi
counts_per_country = data.groupby('Drzava')['Godina'].count()

# Brojanje država sa manje od 15 uzoraka od 2000. do 2015. godine
count = len(counts_per_country[counts_per_country < 15])

print("Broj država sa manje od 15 uzoraka od 2000. do 2015. godine:", count)

"""---

## Rešavanje problema nedostajućih vrednosti

#### Sortiranje i interpolacija podataka
"""

data = data.groupby('Drzava').apply(lambda x: x.sort_values('Godina')).reset_index(drop=True)

print(data.loc[data['Drzava'] == 'Bahamas', ['Broj dece [1-4] umrle od HIV-a', 'Populacija', 'BDP po glavi stanovnika']])

# data = data.interpolate()

# interpolacija po drzavama nece ra diti jer neke drzave imaju sve NA vrednosti
data = data.groupby('Godina').apply(lambda x: x.interpolate()) # isto se pokaze

print(data.loc[data['Drzava'] == 'Bahamas', ['Broj dece [1-4] umrle od HIV-a', 'Populacija', 'BDP po glavi stanovnika']])

"""#### Obrada autlajera

##### Priprema kolona za obradu autlajera
"""

kolone_outliers = data.columns.tolist()
kolone_outliers = kolone_outliers[3:] # izbacio drzavu, godinu i status drzave

kolone_outliers.remove('Smrtnost novorodjencadi')
kolone_outliers.remove('Uspesnost u iskoristenosti prirodnih resursa')
kolone_outliers.remove('Skolovanje')

"""##### Prikaz autlajera

######*1. Očekivani životni vek*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[0], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[0], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[0], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://ourworldindata.org/grapher/life-expectancy?tab=map&time=2000

######*2. Smrtnost odraslih od 15 do 60 godina (verovatnoća na 1000 ljudi)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[1], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[1], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[1], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://www.who.int/data/gho/data/indicators/indicator-details/GHO/adult-mortality-rate-(probability-of-dying-between-15-and-60-years-per-1000-population)

######*3. Konzumacija alkohola godišnje (konzumacija cistog alkohola godišnje u litrama)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[2], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[2], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[2], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""######*4. Zdravstveni izdaci po osobi (u USD, godišnje)*"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[3], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[3], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[3], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://data.worldbank.org/indicator/SH.XPD.CHEX.PC.CD?end=2021&start=2021&view=map&year=2004

######*5. Hepatitis B (procenat vakcinisanih jednogodišnjaka)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[4], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[4], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[4], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://data.worldbank.org/indicator/SH.IMM.HEPB?view=map&year=2005

######*6. Male boginje (broj prijavljenih slučajeva)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[5], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[5], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[5], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://ourworldindata.org/grapher/reported-cases-of-measles?tab=map&time=2021

######*7. Gojaznost (udeo gojaznog stanovništva)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[6], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[6], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[6], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://ourworldindata.org/grapher/share-of-adults-who-are-overweight?time=2016

######*8. Smrtnost mlađih od 5 godina (u hiljadama)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[7], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[7], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[7], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://data.worldbank.org/indicator/SH.DTH.MORT?end=2021&start=2021&view=map&year=2000

######*9. Poliomijelitis - Polio (procenat vakcinisanih jednogodišnjaka)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[8], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[8], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[8], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://www.who.int/data/gho/data/indicators/indicator-details/GHO/polio-(pol3)-immunization-coverage-among-1-year-olds-(-)

######*10. Udeo budžeta na zdravstvene izdatke*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[9], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[9], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[9], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://data.worldbank.org/indicator/SH.XPD.CHEX.GD.ZS?end=2021&start=2021&view=map

######*11. Difterija (procenat vakcinisanih jednogodišnjaka)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[10], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[10], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[10], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://www.who.int/data/gho/data/indicators/indicator-details/GHO/diphtheria-tetanus-toxoid-and-pertussis-(dtp3)-immunization-coverage-among-1-year-olds-(-)

######*12. Broj umrle dece od HIV-a (na hiljadnu novorođenčandi)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[11], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[11], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[11], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://www.who.int/data/gho/data/indicators/indicator-details/GHO/deaths-per-1-000-live-births

######*13. BDP po glavi stanovnika*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[12], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[12], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[12], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""######*14. Populacija*"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[13], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[13], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[13], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""######*15. Mršavost od 10 do 19 godina (udeo u toj starosnoj dobi)*"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[14], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[14], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[14], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://www.who.int/data/maternal-newborn-child-adolescent-ageing/indicator-explorer-new/mca/prevalence-of-thinness-among-adolescents-aged-10-19-years-(bmi--2-standard-deviations-below-the-median-(crude-estimate))

######*16. Mršavost od 5 do 9 godina (udeo u toj starosnoj dobi)*
"""

fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)

sns.boxplot(data=data, x=kolone_outliers[15], ax=ax1)
sns.kdeplot(data=data, x=kolone_outliers[15], fill=True, color='purple', ax=ax2)
sns.histplot(data=data, x=kolone_outliers[15], color='green', ax=ax3)

ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')

plt.show()

"""Referenca: https://www.who.int/data/gho/data/indicators/indicator-details/GHO/prevalence-of-thinness-among-children-and-adolescents-bmi--2-standard-deviations-below-the-median-(crude-estimate)-(-)

###### Sledeći autlajeri zahtevaju obradu

######*17. Smrtnost novorođenčadi (do godinu dana, na 1000 novorođenčadi)*
"""

#outliers_count = len(data[data['Smrtnost novorodjencadi'] > 200])
Q1 = np.percentile(data['Smrtnost novorodjencadi'], 25)
Q3 = np.percentile(data['Smrtnost novorodjencadi'], 75)
IQR = Q3 - Q1

lower_limit = Q1 - 1.5 * IQR
upper_limit = Q3 + 1.5 * IQR

outliers_count = len(data[data['Smrtnost novorodjencadi'] > 200])

print("Broj autlajera:", outliers_count)
print("Obuhvaćeno je", round(outliers_count/data.shape[0] * 100, 2), "% ukupnog broja pojava")
print()

# iscrtavanje pre sredjivanja autlajera
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)
sns.boxplot(data=data, x='Smrtnost novorodjencadi', ax=ax1, color='pink')
sns.kdeplot(data=data, x='Smrtnost novorodjencadi', fill=True, color='gray', ax=ax2)
sns.histplot(data=data, x='Smrtnost novorodjencadi', color='orange', ax=ax3)
ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')
plt.show()

# otklanjanje problema autlajera - winzorizacija
outliers = data[data['Smrtnost novorodjencadi'] > 200]
data.loc[outliers.index, 'Smrtnost novorodjencadi'] = upper_limit

# iscrtavanje nakon sredjivanja autlajera
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)
sns.boxplot(data=data, x='Smrtnost novorodjencadi', ax=ax1, color='pink')
sns.kdeplot(data=data, x='Smrtnost novorodjencadi', fill=True, color='gray', ax=ax2)
sns.histplot(data=data, x='Smrtnost novorodjencadi', color='orange', ax=ax3)
ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')
plt.show()

"""Referenca: https://www.who.int/data/gho/data/indicators/indicator-details/GHO/prevalence-of-thinness-among-children-and-adolescents-bmi--2-standard-deviations-below-the-median-(crude-estimate)-(-)

######*18. Uspešnost u iskorištenosti prirodnih resursa (koeficijent 0-1)*
"""

# broj autlajera
Q1 = np.percentile(data['Uspesnost u iskoristenosti prirodnih resursa'], 25)
IQR = data['Uspesnost u iskoristenosti prirodnih resursa'].quantile(0.75) - Q1
lower_extreme = Q1 - 1.5 * IQR # nepotrebno
outliers_count = len(data[data['Uspesnost u iskoristenosti prirodnih resursa'] < lower_extreme])
print("Broj autlajera:", outliers_count)
print("Obuhvaćeno je", round(outliers_count/data.shape[0] * 100, 2), "% ukupnog broja pojava")

# iscrtavanje pre sredjivanja autlajera
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)
sns.boxplot(data=data, x='Uspesnost u iskoristenosti prirodnih resursa', ax=ax1, color='pink')
sns.kdeplot(data=data, x='Uspesnost u iskoristenosti prirodnih resursa', fill=True, color='gray', ax=ax2)
sns.histplot(data=data, x='Uspesnost u iskoristenosti prirodnih resursa', color='orange', ax=ax3)
ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')
plt.show()

# otklanjanje problema autlajera
data['Uspesnost u iskoristenosti prirodnih resursa'] = data['Uspesnost u iskoristenosti prirodnih resursa'].replace(0, np.nan)
data['Uspesnost u iskoristenosti prirodnih resursa'] = pd.to_numeric(data['Uspesnost u iskoristenosti prirodnih resursa'], errors='coerce')
data['Uspesnost u iskoristenosti prirodnih resursa'] = data['Uspesnost u iskoristenosti prirodnih resursa'].interpolate()


# iscrtavanje pre sredjivanja autlajera
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)
sns.boxplot(data=data, x='Uspesnost u iskoristenosti prirodnih resursa', ax=ax1, color='pink')
sns.kdeplot(data=data, x='Uspesnost u iskoristenosti prirodnih resursa', fill=True, color='gray', ax=ax2)
sns.histplot(data=data, x='Uspesnost u iskoristenosti prirodnih resursa', color='orange', ax=ax3)
ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')
plt.show()

"""Referenca: https://ourworldindata.org/human-development-index#standard-of-living

######*19. Školovanje (u godinama)*
"""

# broj autlajera
Q1 = np.percentile(data['Skolovanje'], 25)
IQR = data['Skolovanje'].quantile(0.75) - Q1
lower_extreme = Q1 - 1.5 * IQR
outliers_count = len(data[data['Skolovanje'] < lower_extreme])
print("Broj autlajera:", outliers_count)
print("Obuhvaćeno je", round(outliers_count/data.shape[0] * 100, 2), "% ukupnog broja pojava")

# iscrtavanje pre sredjivanja autlajera
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)
sns.boxplot(data=data, x='Skolovanje', ax=ax1, color='pink')
sns.kdeplot(data=data, x='Skolovanje', fill=True, color='gray', ax=ax2)
sns.histplot(data=data, x='Skolovanje', color='orange', ax=ax3)
ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')
plt.show()

# otklanjanje problema autlajera
data['Skolovanje'] = data['Skolovanje'].replace(0.0, np.nan)
data['Skolovanje'] = pd.to_numeric(data['Skolovanje'], errors='coerce')
data['Skolovanje'] = data['Skolovanje'].interpolate()

# iscrtavanje nakon sredjivanja autlajera
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 6), sharex=True)
sns.boxplot(data=data, x='Skolovanje', ax=ax1, color='pink')
sns.kdeplot(data=data, x='Skolovanje', fill=True, color='gray', ax=ax2)
sns.histplot(data=data, x='Skolovanje', color='orange', ax=ax3)
ax1.set_ylabel('Vrednosti')
ax2.set_ylabel('Gustina')
ax3.set_ylabel('Brojnost')
ax1.set_title('Kutijasti dijagram')
ax2.set_title('Grafik raspodele')
ax3.set_title('Histogram')
plt.show()

"""Referenca: https://ourworldindata.org/grapher/mean-years-of-schooling-long-run?time=2003

#### Potvrda saniranosti nedostajućih vrednosti
"""

print(data.isna().sum())

"""---

## Vizuelizacija podataka

#### Očekivani životni vek kroz vreme
"""

plt.figure(figsize=(20, 8))

sns.violinplot(data=data, x="Godina", y="Ocekivani zivotni vek", inner="box", palette="Set3", cut=2, linewidth=3)

plt.xlabel("Godina")
plt.ylabel("Očekivani zivotni vek")
plt.title("Zavisnost između očekivanog životnog veka i godina")

plt.show()

"""#### Pregled raspodele zdravstvenih izdataka i odnosa razvijenih i zemalja u razvoju"""

status = data['Status drzave'].value_counts().rename({'Developing': 'U razvoju', 'Developed': 'Razvijene'})

sns.set_palette("Set3")
# Kreiraj subplot
fig, (ax2, ax1) = plt.subplots(1, 2, figsize=(15, 7))

# Pita dijagram

ax1.pie(status, labels=status.index, autopct='%1.1f%%', wedgeprops=dict(edgecolor='white', linewidth=2))
ax1.set_title("Odnos statusa država")

# Zdravstveni izdaci
zdravstveni_izdaci = data[data['Status drzave'].isin(['Developing', 'Developed'])]
zdravstveni_izdaci['Status drzave'] = zdravstveni_izdaci['Status drzave'].replace({'Developing': 'U razvoju', 'Developed': 'Razvijene'})

sns.violinplot(data=zdravstveni_izdaci, x='Status drzave', y='Zdravstveni izdaci po osobi u USD', inner="box", palette="Set3", cut=2, linewidth=2, split=True, ax=ax2, scale="count")

ax2.set_xlabel('Status države')
ax2.set_ylabel('Zdravstveni izdaci po osobi u USD')
ax2.set_title('Raspodela zdravstvenih izdataka u zemljama')

plt.tight_layout()
plt.show()

"""#### Pregled korelacija pomoću toplotne mape"""

# izbacio kolonu godine
correlation_matrix = data.drop('Godina', axis=1).corr()

plt.figure(figsize=(15, 10))
sns.heatmap(correlation_matrix, annot=True, linewidths=0.5, xticklabels=correlation_matrix.columns, yticklabels=correlation_matrix.columns)
plt.title('Matrica korelacije')

# zakrivljenje teksta na x-osi
plt.xticks(rotation=45, ha='right')

plt.show()

"""#### Iscrtavanje interesantnih grafikona zavisnosti"""

sns.set_palette('Set1')
fig, axs = plt.subplots(3, 2, figsize=(16, 19))

developed = data[data['Status drzave'] == 'Developed']
developing = data[data['Status drzave'] == 'Developing']


# Grafikon 1
duzina_zivota = data['Ocekivani zivotni vek']
skolovanje = data['Skolovanje']
correlation = np.corrcoef(skolovanje, duzina_zivota)[0, 1]
regression_line = np.poly1d(np.polyfit(skolovanje, duzina_zivota, 1))
axs[0, 0].scatter(developed['Skolovanje'], developed['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Razvijene zemlje')
axs[0, 0].scatter(developing['Skolovanje'], developing['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Nerazvijene zemlje')
axs[0, 0].plot(skolovanje, regression_line(skolovanje), color='orange', linewidth=4)
axs[0, 0].set_xlabel('Školovanje')
axs[0, 0].set_ylabel('Očekivani zivotni vek')
axs[0, 0].set_title('Zavisnost između očekivanog životnog veka i školovanja')
axs[0, 0].grid(True)
axs[0, 0].text(0.95, 0.05, f'Koeficijent korelacije: {correlation:.2f}', ha='right', va='center', transform=axs[0, 0].transAxes, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round'), fontsize=12)
axs[0, 0].legend()

# Grafikon 2
duzina_zivota = data['Ocekivani zivotni vek']
gojaznost = data['Procenat gojazog stanovništva']
correlation = np.corrcoef(gojaznost, duzina_zivota)[0, 1]
regression_line = np.poly1d(np.polyfit(gojaznost, duzina_zivota, 1))
axs[0, 1].scatter(developed['Procenat gojazog stanovništva'], developed['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Razvijene zemlje')
axs[0, 1].scatter(developing['Procenat gojazog stanovništva'], developing['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Nerazvijene zemlje')
axs[0, 1].plot(gojaznost, regression_line(gojaznost), color='orange', linewidth=4)
axs[0, 1].set_xlabel('Procenat gojazog stanovništva')
axs[0, 1].set_ylabel('Očekivani zivotni vek')
axs[0, 1].set_title('Zavisnost između očekivanog životnog veka i procenta gojaznog stanovništva')
axs[0, 1].grid(True)
axs[0, 1].text(0.05, 0.95, f'Koeficijent korelacije: {correlation:.2f}', ha='left', va='top', transform=axs[0, 1].transAxes, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round'), fontsize=12)
axs[0, 1].legend(loc='lower right')


# Grafikon 3
duzina_zivota = data['Ocekivani zivotni vek']
alkohol = data['Konzumacija alkohola godišnje (l)(15+)']
correlation = np.corrcoef(alkohol, duzina_zivota)[0, 1]
regression_line = np.poly1d(np.polyfit(alkohol, duzina_zivota, 1))
axs[1, 0].scatter(developed['Konzumacija alkohola godišnje (l)(15+)'], developed['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Razvijene zemlje')
axs[1, 0].scatter(developing['Konzumacija alkohola godišnje (l)(15+)'], developing['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Nerazvijene zemlje')
axs[1, 0].plot(alkohol, regression_line(alkohol), color='orange', linewidth=4)
axs[1, 0].set_xlabel('Konzumacija alkohola godišnje (l)(15+)')
axs[1, 0].set_ylabel('Očekivani zivotni vek')
axs[1, 0].set_title('Zavisnost između očekivanog životnog veka i konzumacije alkohola')
axs[1, 0].grid(True)
axs[1, 0].text(0.05, 0.95, f'Koeficijent korelacije: {correlation:.2f}', ha='left', va='top', transform=axs[1, 0].transAxes, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round'), fontsize=12)
axs[1, 0].legend(loc='lower right')


# Grafikon 4
duzina_zivota = data['Ocekivani zivotni vek']
izdaci = data['Zdravstveni izdaci po osobi u USD']
correlation = np.corrcoef(izdaci, duzina_zivota)[0, 1]
regression_line = np.poly1d(np.polyfit(izdaci, duzina_zivota, 1))
axs[1, 1].scatter(developed['Zdravstveni izdaci po osobi u USD'], developed['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Razvijene zemlje')
axs[1, 1].scatter(developing['Zdravstveni izdaci po osobi u USD'], developing['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Nerazvijene zemlje')
axs[1, 1].plot(izdaci, regression_line(izdaci), color='orange', linewidth=4)
axs[1, 1].set_xlabel('Zdravstveni izdaci po osobi u USD')
axs[1, 1].set_ylabel('Očekivani zivotni vek')
axs[1, 1].set_title('Zavisnost između očekivanog životnog veka i zdravstvenih izdataka po osobi u USD')
axs[1, 1].grid(True)
axs[1, 1].text(0.95, 0.05, f'Koeficijent korelacije: {correlation:.2f}', ha='right', va='center', transform=axs[1, 1].transAxes, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round'), fontsize=12)
axs[1, 1].legend()

# Grafikon 5
duzina_zivota = data['Ocekivani zivotni vek']
smrtnost = data['Smrtnost odraslih (15-60)']
correlation = np.corrcoef(smrtnost, duzina_zivota)[0, 1]
regression_line = np.poly1d(np.polyfit(smrtnost, duzina_zivota, 1))
axs[2, 0].scatter(developed['Smrtnost odraslih (15-60)'], developed['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Razvijene zemlje')
axs[2, 0].scatter(developing['Smrtnost odraslih (15-60)'], developing['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Nerazvijene zemlje')
axs[2, 0].plot(smrtnost, regression_line(smrtnost), color='orange', linewidth=4)
axs[2, 0].set_xlabel('Smrtnost odraslih (15-60)')
axs[2, 0].set_ylabel('Očekivani zivotni vek')
axs[2, 0].set_title('Zavisnost između očekivanog životnog veka i smrtnosti odraslih od 15 do 60 god')
axs[2, 0].grid(True)
axs[2, 0].text(0.95, 0.05, f'Koeficijent korelacije: {correlation:.2f}', ha='right', va='center', transform=axs[2, 0].transAxes, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round'), fontsize=12)
axs[2, 0].legend()

# Grafikon 6
duzina_zivota = data['Ocekivani zivotni vek']
iskoristenost = data['Uspesnost u iskoristenosti prirodnih resursa']
correlation = np.corrcoef(iskoristenost, duzina_zivota)[0, 1]
regression_line = np.poly1d(np.polyfit(iskoristenost, duzina_zivota, 1))
axs[2, 1].scatter(developed['Uspesnost u iskoristenosti prirodnih resursa'], developed['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Razvijene zemlje')
axs[2, 1].scatter(developing['Uspesnost u iskoristenosti prirodnih resursa'], developing['Ocekivani zivotni vek'], s=100, alpha=0.5, label='Nerazvijene zemlje')
axs[2, 1].plot(iskoristenost, regression_line(iskoristenost), color='orange', linewidth=4)
axs[2, 1].set_xlabel('Uspešnost u iskorištenosti prirodnih resursa')
axs[2, 1].set_ylabel('Očekivani zivotni vek')
axs[2, 1].set_title('Zavisnost između očekivanog životnog veka \n i uspešnosti u iskorištenosti prirodnih resursa')
axs[2, 1].grid(True)
axs[2, 1].text(0.95, 0.05, f'Koeficijent korelacije: {correlation:.2f}', ha='right', va='center', transform=axs[2, 1].transAxes, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round'), fontsize=12)
axs[2, 1].legend()

plt.tight_layout()
plt.show()

"""#### Pregled prosečnog BDP-a po osobi u top 5 najbogatijih država"""

sorted_data = data.sort_values('BDP po glavi stanovnika', ascending=False)

grouped_data = sorted_data.groupby('Drzava').filter(lambda x: len(x) >= 15).groupby('Drzava')['BDP po glavi stanovnika'].mean()

top_5_countries_by_highest_gdp = grouped_data.nlargest(5).index.tolist()

gdp_per_capita = grouped_data.nlargest(5).values

plt.figure(figsize=(10, 6))
plt.bar(top_5_countries_by_highest_gdp, gdp_per_capita,  width=0.3)
plt.xlabel('Država')
plt.ylabel('Prosečan BDP po glavi stanovnika')
plt.title('Top 5 najbogatijih drzava')
plt.xticks(rotation=20)
plt.grid(True)
plt.show()

"""#### Pregled prosečnog BDP-a po osobi u top 5 najsiromašnijih država"""

sorted_data = data.sort_values('BDP po glavi stanovnika', ascending=True)

grouped_data = sorted_data.groupby('Drzava').filter(lambda x: len(x) >= 15).groupby('Drzava')['BDP po glavi stanovnika'].mean()

top_5_countries_by_lowest_gdp = grouped_data.nsmallest(5).index.tolist()

gdp_per_capita = grouped_data.nsmallest(5).values

plt.figure(figsize=(10, 6))
plt.bar(top_5_countries_by_lowest_gdp, gdp_per_capita,  width=0.3)
plt.xlabel('Država')
plt.ylabel('Prosečan BDP po glavi stanovnika')
plt.title('Top 5 najsiromašnijih država')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

"""#### Pregled zavisnosti bogatih i siromašnih država prema očekivanoj dužini životnog veka"""

sorted_data_highest = data.sort_values('BDP po glavi stanovnika', ascending=False)
top_5_countries_by_highest_gdp = sorted_data_highest.groupby('Drzava').filter(lambda x: len(x) >= 15).groupby('Drzava')['BDP po glavi stanovnika'].mean().nlargest(5).index.tolist()

sorted_data_lowest = data.sort_values('BDP po glavi stanovnika', ascending=True)
top_5_countries_by_lowest_gdp = sorted_data_lowest.groupby('Drzava').filter(lambda x: len(x) >= 15).groupby('Drzava')['BDP po glavi stanovnika'].mean().nsmallest(5).index.tolist()

selected_countries = top_5_countries_by_highest_gdp + top_5_countries_by_lowest_gdp
selected_data = data[data['Drzava'].isin(selected_countries)]

sns.set_context("notebook", font_scale=1.2)
sns.set_palette("RdYlGn", len(selected_countries))

plt.figure(figsize=(14, 8))

for country in selected_countries:
    country_data = selected_data[selected_data['Drzava'] == country]
    sns.lineplot(data=country_data, x='Godina', y='Ocekivani zivotni vek', label=country, linewidth=2.5)

plt.xlabel('Godina')
plt.ylabel('Ocekivani zivotni vek')
plt.title('Zavisnost ocekivanog zivotnog veka za odabrane drzave')

plt.grid(True)
plt.show()

"""#### Pregled zavisnosti grupe faktora i očekivane dužine životnog veka"""

zdravlje = ['Prijavljeni slucajevi malih boginja', 'Poliomijelitis imunizacija jednogodisnjaka', 'Difterija', 'Broj dece [1-4] umrle od HIV-a']
smrtnost = ['Smrtnost odraslih (15-60)', 'Smrtnost novorodjencadi', 'Smrtnost mladjih od 5 god u hiljadama']
ekonomija = ['Zdravstveni izdaci po osobi u USD', '% budzeta za zdravstvene izdatke', 'BDP po glavi stanovnika', 'Uspesnost u iskoristenosti prirodnih resursa']
drustvena_sfera = ['Konzumacija alkohola godišnje (l)(15+)', 'Populacija', 'Mrsavost od 10 do 19 god', 'Mrsavost od 5 do 9 god', 'Skolovanje', 'Procenat gojazog stanovništva']

grouped_columns = data[[*zdravlje, *smrtnost, *ekonomija, *drustvena_sfera, 'Ocekivani zivotni vek']]
correlation_matrix = grouped_columns.corr()
correlations_with_life_expectancy = correlation_matrix['Ocekivani zivotni vek']
grouped_correlations = pd.Series({
    'Zdravlje': abs(correlations_with_life_expectancy[zdravlje]).mean(),
    'Smrtnost': abs(correlations_with_life_expectancy[smrtnost]).mean(),
    'Ekonomija': abs(correlations_with_life_expectancy[ekonomija]).mean(),
    'Drustvena sfera': abs(correlations_with_life_expectancy[drustvena_sfera]).mean()
})

developed_correlation_matrix = data[data['Status drzave'] == 'Developed'][[*zdravlje, *smrtnost, *ekonomija, *drustvena_sfera, 'Ocekivani zivotni vek']].corr()
developed_correlations_with_life_expectancy = developed_correlation_matrix['Ocekivani zivotni vek']
developed_grouped_correlations = pd.Series({
    'Zdravlje': abs(developed_correlations_with_life_expectancy[zdravlje]).mean(),
    'Smrtnost': abs(developed_correlations_with_life_expectancy[smrtnost]).mean(),
    'Ekonomija': abs(developed_correlations_with_life_expectancy[ekonomija]).mean(),
    'Drustvena sfera': abs(developed_correlations_with_life_expectancy[drustvena_sfera]).mean()
})

developing_correlation_matrix = data[data['Status drzave'] == 'Developing'][[*zdravlje, *smrtnost, *ekonomija, *drustvena_sfera, 'Ocekivani zivotni vek']].corr()
developing_correlations_with_life_expectancy = developing_correlation_matrix['Ocekivani zivotni vek']
developing_grouped_correlations = pd.Series({
    'Zdravlje': abs(developing_correlations_with_life_expectancy[zdravlje]).mean(),
    'Smrtnost': abs(developing_correlations_with_life_expectancy[smrtnost]).mean(),
    'Ekonomija': abs(developing_correlations_with_life_expectancy[ekonomija]).mean(),
    'Drustvena sfera': abs(developing_correlations_with_life_expectancy[drustvena_sfera]).mean()
})

# Kreiranje figura i osa
fig, axes = plt.subplots(2, 1, figsize=(17, 10))

# Grafikon 1: Trakasti grafikon
bar_height = 0.33
bar_positions_developed = np.arange(len(developed_grouped_correlations))
bar_positions_developing = bar_positions_developed + bar_height

sns.set_palette('pastel')

axes[0].barh(bar_positions_developed, developed_grouped_correlations, height=bar_height, label='Razvijene zemlje')
axes[0].barh(bar_positions_developing, developing_grouped_correlations, height=bar_height, label='Nerazvijene zemlje')

axes[0].set_yticks(bar_positions_developed + bar_height/2)
axes[0].set_yticklabels(developed_grouped_correlations.index)

axes[0].set_title('Prosečna korelacija između grupe faktora i očekivanog životnog veka')
axes[0].set_xlabel('Prosečna apsolutna korelacija')
axes[0].set_ylabel('Grupe faktora')

axes[0].legend(loc='lower right')

# Grafikon 2: Tabela
table_data = [
    ['Zdravlje', 'Smrtnost', 'Ekonomija', 'Drustvena sfera'],
    ['Prijavljeni slucajevi malih boginja', 'Smrtnost odraslih (15-60)', 'Zdravstveni izdaci po osobi u USD', 'Konzumacija alkohola godišnje (l)(15+)'],
    ['Poliomijelitis imunizacija jednogodisnjaka', 'Smrtnost novorodjencadi', '% budzeta za zdravstvene izdatke', 'Populacija'],
    ['Difterija', 'Smrtnost mladjih od 5 god u hiljadama', 'BDP po glavi stanovnika', 'Mrsavost od 10 do 19 god'],
    ['Broj dece [1-4] umrle od HIV-a', '', 'Iskoristenost prirodnih resursa', 'Mrsavost od 5 do 9 god'],
    ['', '', 'Skolovanje', 'Procenat gojazog stanovništva']
]

colors = ['lightblue', 'lightgreen', 'lightyellow', 'lightcoral']

table = axes[1].table(cellText=table_data, cellLoc='center', loc='center', cellColours=[colors] * len(table_data))
table.scale(1, 1.5)
table.auto_set_font_size(False)
table.set_fontsize(13)

axes[1].axis('off')

# Prikaz grafikona
plt.tight_layout()
plt.show()

"""#### Prikaz mape sveta uz dve visoko zavisne promenljive"""

import warnings

warnings.filterwarnings('ignore', category=FutureWarning) # suzbijam dva warninga koja nisu znacajna (u njima se trazi da preuzmem podatke o nazivima drzava i da mapiram nazive kolona na te podatke, jer je to sigurniji nacin, nemam potrebe za tim trenunto)

world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
merged_data = world.merge(data, left_on='name', right_on='Drzava')
fig, ax = plt.subplots(figsize=(20, 15))
merged_data.plot(column='Ocekivani zivotni vek', cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0.8', legend=True, legend_kwds={'shrink': 0.6})
title = 'Očekivani životni vek po državama'
ax.set_title(title, fontdict={'fontsize': '18'}, pad=20)  # Podešavanje naslova i pomeraja (pad)
plt.show()

world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
merged_data = world.merge(data, left_on='name', right_on='Drzava')
fig, ax = plt.subplots(figsize=(20, 15))
merged_data.plot(column='Uspesnost u iskoristenosti prirodnih resursa', cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0.8', legend=True, legend_kwds={'shrink': 0.6})
title = 'Uspešnost u iskorišćenosti prirodnih resursa po državama'
ax.set_title(title, fontdict={'fontsize': '18'}, pad=20)  # Podešavanje naslova i pomeraja (pad)
plt.show()

"""#### Prosečan životni vek po kontinentima"""

continent_map = {
    'Afrika': ['Algeria', 'Angola', 'Benin', 'Botswana', 'Burkina Faso', 'Burundi', 'Cabo Verde', 'Cameroon',
               'Central African Republic', 'Chad', 'Comoros', 'Congo, Dem. Rep.', 'Congo, Rep.', 'Cote d\'Ivoire',
               'Djibouti', 'Egypt', 'Equatorial Guinea', 'Eritrea', 'Eswatini', 'Ethiopia', 'Gabon', 'Gambia',
               'Ghana', 'Guinea', 'Guinea-Bissau', 'Kenya', 'Lesotho', 'Liberia', 'Libya', 'Madagascar', 'Malawi',
               'Mali', 'Mauritania', 'Mauritius', 'Morocco', 'Mozambique', 'Namibia', 'Niger', 'Nigeria',
               'Rwanda', 'Sao Tome and Principe', 'Senegal', 'Seychelles', 'Sierra Leone', 'Somalia', 'South Africa',
               'South Sudan', 'Sudan', 'Tanzania', 'Togo', 'Tunisia', 'Uganda', 'Zambia', 'Zimbabwe'],
    'Azija': ['Afghanistan', 'Bahrain', 'Bangladesh', 'Bhutan', 'Brunei', 'Cambodia', 'China', 'East Timor',
             'India', 'Indonesia', 'Iran', 'Iraq', 'Israel', 'Japan', 'Jordan', 'Kazakhstan', 'Kuwait',
             'Kyrgyz Republic', 'Laos', 'Lebanon', 'Malaysia', 'Maldives', 'Mongolia', 'Myanmar', 'Nepal',
             'North Korea', 'Oman', 'Pakistan', 'Philippines', 'Qatar', 'Saudi Arabia', 'Singapore', 'South Korea',
             'Sri Lanka', 'Syria', 'Taiwan', 'Tajikistan', 'Thailand', 'Turkey', 'Turkmenistan', 'United Arab Emirates',
             'Uzbekistan', 'Vietnam', 'Yemen'],
    'Evropa': ['Albania', 'Andorra', 'Armenia', 'Austria', 'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia and Herzegovina',
               'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia',
               'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy',  'Latvia', 'Liechtenstein',
               'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia',
               'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino', 'Serbia', 'Slovak Republic', 'Slovenia',
               'Spain', 'Sweden', 'Switzerland', 'Ukraine', 'United Kingdom', 'Vatican City'],
    'Severna Amerika': ['Antigua and Barbuda', 'Bahamas', 'Barbados', 'Belize', 'Canada', 'Costa Rica', 'Cuba',
                      'Dominica', 'Dominican Republic', 'El Salvador', 'Grenada', 'Guatemala', 'Haiti', 'Honduras',
                      'Jamaica', 'Mexico', 'Nicaragua', 'Panama', 'Saint Kitts and Nevis', 'Saint Lucia',
                      'Saint Vincent and the Grenadines', 'Trinidad and Tobago', 'United States'],
    'Okeanija': ['Australia', 'Fiji', 'Kiribati', 'Marshall Islands', 'Micronesia', 'Nauru', 'New Zealand', 'Palau',
                'Papua New Guinea', 'Samoa', 'Solomon Islands', 'Tonga', 'Tuvalu', 'Vanuatu'],
    'Južna Amerika': ['Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia', 'Ecuador', 'Guyana', 'Paraguay', 'Peru',
                      'Suriname', 'Uruguay', 'Venezuela']
}

data['Kontinent'] = data['Drzava'].map({country: continent for continent, countries in continent_map.items() for country in countries})

continent_life_expectancy = data.groupby('Kontinent')['Ocekivani zivotni vek'].mean().reset_index()

plt.figure(figsize=(10, 6))
plt.plot(continent_life_expectancy['Kontinent'], continent_life_expectancy['Ocekivani zivotni vek'], marker='o')
plt.xlabel('Kontinent')
plt.ylabel('Ocekivani zivotni vek')
plt.title('Prosečan očekivani životni vek po kontinentima')
plt.xticks(rotation=45)
plt.show()

"""#### Analiza i vizuelizacija očekivanog životnog veka Republike Srbije

##### Komparacija prosečnog BDP-a Republike Srbije i ostale dve države
"""

burundi_bdp = data[data['Drzava'] == 'Burundi']['BDP po glavi stanovnika'].mean()
serbia_bdp = data[data['Drzava'] == 'Serbia']['BDP po glavi stanovnika'].mean()
switzerland_bdp = data[data['Drzava'] == 'Switzerland']['BDP po glavi stanovnika'].mean()

data_bdp = pd.DataFrame({'Drzava': ['Burundi', 'Srbija', 'Švajcarska'],
                         'Prosečan BDP': [burundi_bdp, serbia_bdp, switzerland_bdp]})


plt.figure(figsize=(10, 6))
sns.scatterplot(x='Drzava', y='Prosečan BDP', hue='Drzava', data=data_bdp, s=100, palette='Set1', legend=False)
plt.xlabel('Država')
plt.ylabel('Prosečan BDP')
plt.title('Prosečan BDP za Burundi, Srbiju i Švajcarsku')

for i in range(len(data_bdp)):
    plt.annotate(text=str(round(data_bdp['Prosečan BDP'][i], 2)), xy=(data_bdp['Drzava'][i], data_bdp['Prosečan BDP'][i]),
                 xytext=(0, 10), textcoords='offset points', ha='center', va='bottom', color='Black')

plt.show()

"""##### Komparacija Republike Srbije i ostale dve države pomoću violinskog dijagrama"""

data_life_expectancy = data[data['Drzava'].isin(['Burundi', 'Serbia', 'Switzerland'])]

plt.figure(figsize=(10, 6))
sns.violinplot(x='Drzava', y='Ocekivani zivotni vek', data=data_life_expectancy, palette="Set3", cut=2, linewidth=3)
plt.xlabel('Država')
plt.ylabel('Očekivani životni vek')
plt.title('Očekivani životni vek za Burundi, Srbiju i Švajcarsku')

plt.show()

"""##### Detaljniji prikaz raspodela"""

data_life_expectancy = data[data['Drzava'].isin(['Burundi', 'Serbia', 'Switzerland'])]

plt.figure(figsize=(10, 6))

sns.kdeplot(data=data_life_expectancy[data_life_expectancy['Drzava'] == 'Burundi'], x='Ocekivani zivotni vek', color='skyblue', fill=True, label='Burundi')
sns.kdeplot(data=data_life_expectancy[data_life_expectancy['Drzava'] == 'Serbia'], x='Ocekivani zivotni vek', color='salmon', fill=True, label='Serbia')
sns.kdeplot(data=data_life_expectancy[data_life_expectancy['Drzava'] == 'Switzerland'], x='Ocekivani zivotni vek', color='limegreen', fill=True, label='Switzerland')

plt.xlabel('Očekivani životni vek')
plt.ylabel('Učestalost')
plt.title('Raspodela očekivanog životnog veka')

plt.legend(title='Država')

plt.show()

"""##### Korelacije očekivanog životnog veka i svih ostalih faktora"""

columns = ['Smrtnost odraslih (15-60)', 'Smrtnost novorodjencadi',
           'Konzumacija alkohola godišnje (l)(15+)', 'Zdravstveni izdaci po osobi u USD',
           'Prijavljeni slucajevi malih boginja', 'Smrtnost mladjih od 5 god u hiljadama',
           'Poliomijelitis imunizacija jednogodisnjaka', '% budzeta za zdravstvene izdatke', 'Difterija',
           'BDP po glavi stanovnika', 'Populacija', 'Mrsavost od 10 do 19 god', 'Mrsavost od 5 do 9 god',
           'Uspesnost u iskoristenosti prirodnih resursa', 'Skolovanje', 'Broj dece [1-4] umrle od HIV-a',
           'Procenat gojazog stanovništva']

data_selected = data[data['Drzava'].isin(['Burundi', 'Serbia', 'Switzerland'])][['Drzava', 'Ocekivani zivotni vek'] + columns]

colors = ['skyblue', 'salmon', 'limegreen']

# određivanje broja redova i kolona za raspored dijagrama
num_rows = (len(columns) - 1) // 4 + 1
num_cols = min(4, len(columns))

# kreiranje Figure i Axes objekata
fig, axes = plt.subplots(num_rows, num_cols, figsize=(20, 3.5 * num_rows), sharex=False, sharey=True)

# postavljanje naslova za svaku kolonu
for i, col in enumerate(columns):
    ax = axes[i // num_cols, i % num_cols]
    ax.set_title(col)

# crtanje scatter plotova za svaku kombinaciju kolone i očekivanog životnog veka
for i, col in enumerate(columns):
    ax = axes[i // num_cols, i % num_cols]
    sns.scatterplot(data=data_selected, x=col, y='Ocekivani zivotni vek', hue='Drzava', palette=colors, markers='o', ax=ax, s=100, alpha=0.9)  # promena vrednosti parametra s na 100
    ax.set_xlabel('')
    ax.set_ylabel('Očekivani životni vek')
    ax.get_legend().remove()  # izbacivanje legende iz podgrafikona

# uklanjanje praznih dijagrama
empty_plots = num_rows * num_cols - len(columns)
if empty_plots > 0:
    for i in range(len(columns), num_rows * num_cols):
        ax = axes[i // num_cols, i % num_cols]
        fig.delaxes(ax)

# dodavanje legende za glavni grafikon
legend_elements = [Patch(facecolor=colors[i], label=['Burundi', 'Serbia', 'Switzerland'][i]) for i in range(len(colors))]
fig.legend(handles=legend_elements, loc='lower center', borderaxespad=9, fontsize='medium')

# prikaz dijagrama
plt.tight_layout()

plt.show()

"""##### Zavisnost grupe faktora i očekivane dužine životnog veka"""

zdravlje = ['Prijavljeni slucajevi malih boginja', 'Poliomijelitis imunizacija jednogodisnjaka', 'Difterija', 'Broj dece [1-4] umrle od HIV-a']
smrtnost = ['Smrtnost odraslih (15-60)', 'Smrtnost novorodjencadi', 'Smrtnost mladjih od 5 god u hiljadama']
ekonomija = ['Zdravstveni izdaci po osobi u USD', '% budzeta za zdravstvene izdatke', 'BDP po glavi stanovnika', 'Uspesnost u iskoristenosti prirodnih resursa']
drustvena_sfera = ['Konzumacija alkohola godišnje (l)(15+)', 'Populacija', 'Mrsavost od 10 do 19 god', 'Mrsavost od 5 do 9 god', 'Skolovanje', 'Procenat gojazog stanovništva']

drzave = ['Burundi', 'Serbia', 'Switzerland']
drzave_labels = ['Burundi', 'Srbija', 'Švajcarska']

grouped_correlations = pd.DataFrame(index=drzave_labels, columns=['Zdravlje', 'Smrtnost', 'Ekonomija', 'Drustvena sfera'])

for drzava in drzave:
    grouped_columns = data[data['Drzava'] == drzava][[*zdravlje, *smrtnost, *ekonomija, *drustvena_sfera, 'Ocekivani zivotni vek']]
    correlation_matrix = grouped_columns.corr()
    correlations_with_life_expectancy = correlation_matrix['Ocekivani zivotni vek']
    grouped_correlations.loc[drzava] = abs(correlations_with_life_expectancy).mean()

fig, axes = plt.subplots(2, 1, figsize=(17, 10))

# bar grafikon
bar_width = 0.2
bar_positions = np.arange(len(grouped_correlations.columns))

for i, drzava in enumerate(drzave):
    axes[0].bar(bar_positions + i * bar_width, grouped_correlations.loc[drzava].values, width=bar_width, label=drzave_labels[i])

axes[0].set_xticks(bar_positions + (len(drzave) - 1) * bar_width / 2)
axes[0].set_xticklabels(grouped_correlations.columns)  # dodajem nazive grupa faktora na x-osi
axes[0].set_ylabel('Prosečna apsolutna korelacija')
axes[0].set_xlabel('Grupe faktora')
axes[0].set_title('Prosečna korelacija između grupe faktora i očekivanog životnog veka')
axes[0].legend()

# tabela
table_data = [
    ['Zdravlje', 'Smrtnost', 'Ekonomija', 'Drustvena sfera'],  # dodajem nazive grupa faktora kao prvi red u tabelu
    ['Prijavljeni slucajevi malih boginja', 'Smrtnost odraslih (15-60)', 'Zdravstveni izdaci po osobi u USD', 'Konzumacija alkohola godišnje (l)(15+)'],
    ['Poliomijelitis imunizacija jednogodisnjaka', 'Smrtnost novorodjencadi', '% budzeta za zdravstvene izdatke', 'Populacija'],
    ['Difterija', 'Smrtnost mladjih od 5 god u hiljadama', 'BDP po glavi stanovnika', 'Mrsavost od 10 do 19 god'],
    ['Broj dece [1-4] umrle od HIV-a', '', 'Iskoristenost prirodnih resursa', 'Mrsavost od 5 do 9 god'],
    ['', '', 'Skolovanje', 'Procenat gojazog stanovništva']
]

colors = ['lightblue', 'lightgreen', 'lightyellow', 'lightcoral']

# kreiranje tabele
table = axes[1].table(cellText=table_data, cellLoc='center', loc='center', cellColours=[colors] * len(table_data))

table.scale(1, 1.5)  # povecanje visine ćelija za bolju čitljivost
table.auto_set_font_size(False)
table.set_fontsize(13)

axes[1].axis('off')

plt.tight_layout(rect=[0, 0, 0.95, 1])  # padding sa desne strane
plt.show()